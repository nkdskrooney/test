package com.internousdev.miamiburger.action;

import java.io.File;
import java.io.IOException;
import java.sql.SQLException;
import java.util.Map;

import org.apache.commons.io.FileUtils;
import org.apache.struts2.ServletActionContext;
import org.apache.struts2.interceptor.SessionAware;

import com.opensymphony.xwork2.ActionSupport;

public class MasterAddAction extends ActionSupport implements SessionAware {
//session情報
	public Map<String, Object> session;
//画像をアップロードした際の入力値の保持の為
	private String productName;
	private String productNameKana;
	private String productDescription;
	private int categoryId;
	private int price;
	private String releaseDate;
	private int Status = 1;
//情報を受け取る為の変数の定義（画像情報）
	private File userImage;
	private String userImageContentType;
	private String userImageFileName;
	public String execute() throws SQLException {

//変更予定の商品情報を格納する
		session.put("productName", productName);
		session.put("productNameKana",productNameKana );
		session.put("productDescription",productDescription );
		if(!(price==0)){session.put("price",price );};
		session.put("releaseDate", releaseDate);
		session.put("categoryId", categoryId);
		session.put("Status", Status);

//デフォルトの画像を挿入
		if(!(session.containsKey("image_flg"))){
			session.put("image_file_name", "画像を選択してください");
			session.put("image_file_path", "./images/coming_soon.jpg");
		}

//ファイルアップロードの処理（userImageFileNameが空でない場合）
		if(!(userImageFileName == null)){
			String filePath = ServletActionContext.getServletContext().getRealPath("/").concat("images");
			System.out.println("Image Location:" + filePath);
			File fileToCreate = new File(filePath, userImageFileName);

			try {
				FileUtils.copyFile(userImage, fileToCreate);
				session.put("image_file_name", userImageFileName);
				session.put("image_file_path","images/"+ userImageFileName);
				session.put("image_flg", userImageFileName);
			} catch (IOException e) {
				e.printStackTrace();
			}
		}

//result結果、SUCCESSを挿入する
		String result = SUCCESS;
		return result;
	}

//以下、getter/setter
	public Map<String, Object> getSession() {
		return session;
	}

	public void setSession(Map<String, Object> session) {
		this.session = session;
	}

	public File getUserImage() {
		return userImage;
	}

	public void setUserImage(File userImage) {
		this.userImage = userImage;
	}

	public String getUserImageContentType() {
		return userImageContentType;
	}

	public void setUserImageContentType(String userImageContentType) {
		this.userImageContentType = userImageContentType;
	}

	public String getUserImageFileName() {
		return userImageFileName;
	}

	public void setUserImageFileName(String userImageFileName) {
		this.userImageFileName = userImageFileName;
	}

	public String getProductName() {
		return productName;
	}

	public void setProductName(String productName) {
		this.productName = productName;
	}

	public String getProductNameKana() {
		return productNameKana;
	}

	public void setProductNameKana(String productNameKana) {
		this.productNameKana = productNameKana;
	}

	public String getProductDescription() {
		return productDescription;
	}

	public void setProductDescription(String productDescription) {
		this.productDescription = productDescription;
	}

	public int getCategoryId() {
		return categoryId;
	}

	public void setCategoryId(int categoryId) {
		this.categoryId = categoryId;
	}

	public int getPrice() {
		return price;
	}

	public void setPrice(int price) {
		this.price = price;
	}

	public String getReleaseDate() {
		return releaseDate;
	}

	public void setReleaseDate(String releaseDate) {
		this.releaseDate = releaseDate;
	}

	public int getStatus() {
		return Status;
	}

	public void setStatus(int status) {
		Status = status;
	}
}
